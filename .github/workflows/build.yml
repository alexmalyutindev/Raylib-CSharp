name: Build Raylib-CSharp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  raylib_version: '11202bf299a70a8ef30e28ab99a8184bbb119a99'

jobs:
  
  # Build for Win
  build-win:
    runs-on: windows-latest
    strategy:
      matrix:
        name: [win32, x64]
    
    # Run
    steps:
      - uses: actions/checkout@v4
        
      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Build Raylib
      - name: Build Raylib
        shell: bash
        run: |
          curl -Lso raylib.zip https://github.com/raysan5/raylib/archive/${{ env.raylib_version }}.zip
          unzip -qq raylib.zip
          cmake -S raylib-${{ env.raylib_version }} \
          -A ${{ matrix.name }} \
          -B native \
          -D CMAKE_BUILD_TYPE=Release \
          -D BUILD_SHARED_LIBS=ON \
          -D BUILD_EXAMPLES=OFF \
          -D CUSTOMIZE_BUILD=ON \
          -D SUPPORT_GIF_RECORDING=OFF \
          -D SUPPORT_SCREEN_CAPTURE=OFF \
          -D GRAPHICS=GRAPHICS_API_OPENGL_33
          cmake --build native --config Release

      # Upload Raylib
      - name: Upload Raylib
        uses: actions/upload-artifact@v4
        with:
          name: win-${{ matrix.name }}
          path: native/raylib/Release/raylib.dll
          if-no-files-found: error
    
  # Build for Linux
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [x64]
    
    # Run
    steps:
      - uses: actions/checkout@v4
        
      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      # Setup dependencies
      - name: Setup dependencies
        run: |
          sudo apt-get install -y \
           libglfw3 \
           libglfw3-dev \
           libx11-dev \
           libxcursor-dev \
           libxrandr-dev \
           libxinerama-dev \
           libxi-dev \
           libxext-dev \
           libxfixes-dev \
           libwayland-dev \
           libwayland-bin \
           libxkbcommon-dev 

      # Build Raylib
      - name: Build Raylib
        run: |
          curl -Lso raylib.zip https://github.com/raysan5/raylib/archive/${{ env.raylib_version }}.zip
          unzip -qq raylib.zip
          cmake -S raylib-${{ env.raylib_version }} \
          -B native \
          -D CMAKE_BUILD_TYPE=Release \
          -D BUILD_SHARED_LIBS=ON \
          -D BUILD_EXAMPLES=OFF \
          -D CUSTOMIZE_BUILD=ON \
          -D SUPPORT_GIF_RECORDING=OFF \
          -D SUPPORT_SCREEN_CAPTURE=OFF \
          -D GRAPHICS=GRAPHICS_API_OPENGL_43
          cmake --build native --config Release

      # Upload Raylib
      - name: Upload Raylib
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.name }}
          path: native/raylib/libraylib.so
          if-no-files-found: error
          
  # Build for OSX
  build-osx:
    runs-on: macos-latest
    strategy:
      matrix:
        name: [arm64, x86_64]
    
    # Run
    steps:
      - uses: actions/checkout@v4
        
      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Build Raylib
      - name: Build Raylib
        run: |
          curl -Lso raylib.zip https://github.com/raysan5/raylib/archive/${{ env.raylib_version }}.zip
          unzip -qq raylib.zip
          cmake -S raylib-${{ env.raylib_version }} \
          -B native \
          -D CMAKE_BUILD_TYPE=Release \
          -D CMAKE_OSX_ARCHITECTURES=${{ matrix.name }} \
          -D BUILD_SHARED_LIBS=ON \
          -D BUILD_EXAMPLES=OFF \
          -D CUSTOMIZE_BUILD=ON \
          -D SUPPORT_GIF_RECORDING=OFF \
          -D SUPPORT_SCREEN_CAPTURE=OFF
          cmake --build native --config Release

      # Upload Raylib
      - name: Upload Raylib
        uses: actions/upload-artifact@v4
        with:
          name: osx-${{ matrix.name }}
          path: native/raylib/libraylib.dylib
          if-no-files-found: error
          
